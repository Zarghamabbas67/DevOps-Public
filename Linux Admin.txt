===================================                  AIX                  ==================================
STEP 1- 
lspv

STEP 2- 	
cfgmgr -- once disk added from storage or external server then to read all disk again
after this all disks will be visible

STEP 3-	
lslv fnslv
root@MUMP9LPAR1:/#lslv fnslv
LOGICAL VOLUME:     fnslv                  VOLUME GROUP:   rootvg
LV IDENTIFIER:      00c432a000004b000000017a78268ce5.14 PERMISSION:     read/write

as fns mount point belongs to rootvg.

extendvg rootvg hdisk1



mount 
mount -t ext4 -- to check for particular mount point 
sudo mount /dev/sdc1 /media/usb-drive  -- need root or sudo privilege

unmount DIRECTORY
UNMOUNT DEVICE

lsof +D /home/mystuff or 
fuser command ::By default, the unmount command is unable to detach a file system that is in use. 
You can ascertain which processes are using your file system with the fuser command. Upon running this 
command, you should be able to pinpoint the cause of the activity and halt the processes to proceed with 
the dismount.

unmount --lazy DEVICE::  Sometimes, though, you won’t always have time to check for and stop these processes. 
In cases such as these, you can perform a “lazy” dismount with the -l option. This will tell the 
unmount command to detach the file system as soon as it ceases activity.

STEP 1- You may just want to mount an existing filesystem there, but I'll do a new one from scratch. 
The filesystem will be an LVM Logical Volume.

STEP 2-  
sudo vgs
  VG   #PV #LV #SN Attr   VSize   VFree
  rhel   1   4   0 wz--n-  75.75g   4.00m
  vg00   2   4   0 wz--n- 164.23g <27.23g

STEP 3-
sudo lvs
  LV            VG   Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  home          rhel -wi-ao----  20.00g
  root          rhel -wi-ao----  30.00g
  swap          rhel -wi-ao----  15.75g
  var           rhel -wi-ao----  10.00g
  LVol_FNS      vg00 -wi-ao----  10.00g
  LVol_Jboss    vg00 -wi-ao---- <67.01g
  LVol_was      vg00 -wi-ao----  30.00g
  LVol_weblogic vg00 -wi-ao----  30.00g

STEP 4-
lvcreate -L10G -n mountpoint vgname
 Logical volume "mystufflv" created


STEP 5-
mkfs.ext4 /dev/mapper/athlon-mystufflv 
mke2fs 1.41.14 (22-Dec-2010)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
655360 inodes, 2621440 blocks
131072 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=2684354560
80 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks: 
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632

Writing inode tables: done                            
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 32 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.

STEP 6-
df -h | grep home

STEP 7-
mount /dev/mapper/athlon-mystufflv /home/mystuff/

STEP 8-
umount /home/mystuff/

STEP 9-
If I wanted it mounted at boot time, I could add this entry,
/dev/mapper/athlon-mystufflv /home/mystuff ext4 defaults 1 3
to /etc/fstab.
/etc/fstab

STEP 10-
To mount it immediately after editing /etc/fstab, just issue 'mount -a'

STEP 11- 
extending LV 
extendvg vg00 hdisk3

chfs -a size=3G /home     
chfs -a size=3000M /home
chfs -a size=+1G /home
chfs -a size=+500M /home

rmlv -f oradatavg

reducevg oradatavg hdisk1 --disk to be removed from that mountpoint


----------------------------------

dmesg |grep -i attached  |grep disk

fdisk -l /dev/mapper/VolGroup1-LVol_ora11g

Disk /dev/mapper/VolGroup1-LVol_ora11g: 657.1 GB, 657129996288 bytes, 1283457024 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 262144 bytes / 262144 bytes
-------------------------------------------------------

fdisk -l /dev/mapper/VolGroup1-LVol_ora11g
Disk /dev/mapper/VolGroup1-LVol_ora11g: 657.1 GB, 657129996288 bytes, 1283457024 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 262144 bytes / 262144 bytes

[root@01hw1156640 dpdump]# fdisk /dev/mapper/VolGroup1-LVol_ora11g
Welcome to fdisk (util-linux 2.23.2).

Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.

Device does not contain a recognized partition table
Building a new DOS disklabel with disk identifier 0x69606039.

-----------------------------------------------------

The list of filesystems includes your physical hard drive, as well as virtual hard drives:

/dev/sda2 – This is your physical hard drive. It may be listed as /sda1, /sda0, or you may even have more than one. /dev stands for device.
udev – This is a virtual directory for the /dev directory. This is part of the Linux operating system.
tmpfs – You may have several of these. These are used by /run and other Linux processes as temporary filesystems for running the operating system.
 For example, the tmpfs /run/lock is used to create lockfiles. These are the files that prevent multiple users from changing the same file at the same time.
-----------------------------------------------------

[root@01hw1156640 u03]# df -ht ext4
Filesystem                                Size  Used Avail Use% Mounted on
/dev/mapper/rhel-root                      92G   81G  6.0G  94% /
/dev/mapper/rhel-usr                      9.1G  5.7G  2.9G  67% /usr
/dev/sda2                                 922M  106M  753M  13% /boot
/dev/mapper/rhel-var                       14G  5.5G  7.6G  42% /var
/dev/mapper/rhel-tmp                       14G   94M   13G   1% /tmp
/dev/mapper/VolGroup1-lvol_devplus        256G   55G  189G  23% /DEVPLUS
/dev/mapper/vg00-LVol_presale_test        788G  195M  748G   1% /Presale
/dev/mapper/VolGroup1-Lvol_testing        178G  1.1G  169G   1% /docker
/dev/mapper/VolGroup1-LVol_New            443G  382G   39G  91% /Initiative

------------------------------------------------------
=============================              LINUX             ======================================

lvs -a
vgs -a

cat /etc/fstab| grep u03

lvdisplay /dev/mapper/VolGroup1-LVol_ora11g

df -T

vgdisplay VolGroup1

To increase logical volume--
lvextend -L|--size [+]Size[m|UNIT] LV
lvextend -L +2G /dev/mapper/VolGroup1-LVol_ora11g
In above step we have executed the lvextend command to extend the file system size by 2 GB
but still the file system is not updated, so execute the following resize2fs command

resize2fs /dev/mapper/vg_cloud-LogVol00

fdisk -l /dev/mapper/VolGroup1-LVol_ora11g  ---will also work instead of display commands-- display commands is native to unix

